{
  "_args": [
    [
      {
        "raw": "babel-plugin-component",
        "scope": null,
        "escapedName": "babel-plugin-component",
        "name": "babel-plugin-component",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Sameul/Desktop/Website/portfolio"
    ]
  ],
  "_from": "babel-plugin-component@latest",
  "_id": "babel-plugin-component@0.10.0",
  "_inCache": true,
  "_location": "/babel-plugin-component",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-plugin-component-0.10.0.tgz_1499533858403_0.5198879304807633"
  },
  "_npmUser": {
    "name": "qingwei.li",
    "email": "cinwell.li@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-component",
    "scope": null,
    "escapedName": "babel-plugin-component",
    "name": "babel-plugin-component",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-component/-/babel-plugin-component-0.10.0.tgz",
  "_shasum": "55d6dbc0f35d7a381931b16ff1ee34ef93085add",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-component",
  "_where": "/Users/Sameul/Desktop/Website/portfolio",
  "author": "",
  "babel": {
    "presets": [
      "es2015",
      "stage-0"
    ],
    "plugins": [
      "add-module-exports"
    ]
  },
  "bugs": {
    "url": "https://github.com/qingwei-li/babel-plugin-component/issues"
  },
  "dependencies": {},
  "description": "Modular build plugin for babel.",
  "devDependencies": {
    "babel-cli": "^6.3.13",
    "babel-core": "^6.7.4",
    "babel-istanbul": "^0.7.0",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.3.13",
    "coveralls": "^2.11.6",
    "eslint": "^2.7.0",
    "eslint-config-airbnb": "^6.2.0",
    "expect": "^1.13.4",
    "mocha": "^2.3.4",
    "pre-commit": "~1.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-XRIwGjKApks7uJDMiDGIcPVbGS/ZyFlvi5+NLKV8SRcs6Ws1iUvxS+3ujD152vDEtcMMAB7Vx1ssQnBzgiMveA==",
    "shasum": "55d6dbc0f35d7a381931b16ff1ee34ef93085add",
    "tarball": "https://registry.npmjs.org/babel-plugin-component/-/babel-plugin-component-0.10.0.tgz"
  },
  "files": [
    "lib",
    "package.json",
    "README.md"
  ],
  "gitHead": "ebe612c266928ceeeaae49817490fec740104f18",
  "homepage": "https://github.com/qingwei-li/babel-plugin-component#readme",
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "qingwei.li",
      "email": "cinwell.li@gmail.com"
    }
  ],
  "name": "babel-plugin-component",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# babel-plugin-component\n\n[![NPM version](https://img.shields.io/npm/v/babel-plugin-component.svg)](https://npmjs.org/package/babel-plugin-component)\n[![Build Status](https://travis-ci.org/QingWei-Li/babel-plugin-component.svg?branch=master)](https://travis-ci.org/QingWei-Li/babel-plugin-component)\n[![Coverage Status](https://coveralls.io/repos/github/QingWei-Li/babel-plugin-component/badge.svg?branch=master)](https://coveralls.io/github/QingWei-Li/babel-plugin-component?branch=master)\n\n## Install\n\n```shell\nnpm install babel-plugin-component --save-dev\n```\n\n## Example\n\nConverts\n\n```javascript\nimport { Button } from 'components'\n```\n\nto\n\n```javascript\nvar button = require('components/lib/button')\nrequire('components/lib/button/style.css')\n```\n\n## styleLibraryName Example\n\nConverts\n\n```javascript\nimport Components from 'components'\nimport { Button } from 'components'\n```\n\nto\n\n```javascript\nrequire('components/lib/styleLibraryName/index.css')\nvar button = require('components/lib/styleLibraryName/button.css')\n```\n\n## Usage\n\nVia `.babelrc` or babel-loader.\n\n```javascript\n{\n  \"plugins\": [[\"component\", options]]\n}\n```\n\n## Multiple Module\n```javascript\n{\n  \"plugins\": [xxx, [\"component\", [\n    {\n      libraryName: 'antd',\n      style: true,\n    },\n    {\n      libraryName: 'test-module',\n      style: true,\n    }\n  ]]]\n}\n```\n\n### Component directory structure\n```\n- lib // 'libDir'\n  - index.js // or custom 'root' relative path\n  - style.css // or custom 'style' relative path\n  - componentA\n    - index.js\n    - style.css\n  - componentB\n    - index.js\n    - style.css\n```\n\n### Theme library directory structure\n```\n- lib\n  - theme-default // 'styleLibraryName'\n    - base.css // required\n    - index.css // required\n    - componentA.css\n    - componentB.css\n  - theme-material\n    - ...\n  - componentA\n    - index.js\n  - componentB\n    - index.js\n```\nor \n```\n- lib\n  - theme-custom // 'styleLibrary.name'\n    - base.css // if styleLibrary.base true\n    - index.css // required\n    - componentA.css // default \n    - componentB.css\n  - theme-material\n    - componentA\n      -index.css  // styleLibrary.path  [module]/index.css\n    - componentB\n      -index.css\n  - componentA\n    - index.js\n  - componentB\n    - index.js\n```\n\n### options\n\n- `[\"component\"]`: import js modularly\n- `[\"component\", { \"libraryName\": \"component\" }]`: module name\n- `[\"component\", { \"styleLibraryName\": \"theme_package\" }]`: style module name\n- `[\"component\", { \"styleLibraryName\": \"~independent_theme_package\" }]`: Import a independent theme package\n- `[\"component\", { \"styleLibrary\": {} }]`: Import a independent theme package with more config\n  ```\n  styleLibrary: {\n    \"name\": \"xxx\", // same with styleLibraryName\n    \"base\": true,  // if theme package has a base.css\n    \"path\": \"[module]/index.css\",  // the style path. e.g. module Alert =>  alert/index.css\n    \"mixin\": true  // if theme-package not found css file, then use [libraryName]'s css file\n  }\n  ```\n- `[\"component\", { \"style\": true }]`: import js and css from 'style.css'\n- `[\"component\", { \"style\": cssFilePath }]`: import style css from filePath\n- `[\"component\", { \"libDir\": \"lib\" }]`: lib directory\n- `[\"component\", { \"root\": \"index\" }]`: main file dir\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/qingwei-li/babel-plugin-component.git"
  },
  "scripts": {
    "build": "rm -rf lib && babel src --out-dir lib --ignore __tests__",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "debug": "mocha --require babel-core/register --require babel-polyfill --no-timeouts",
    "lint": "eslint --ext .js src",
    "prepublish": "npm run build",
    "test": "babel-node node_modules/.bin/babel-istanbul cover node_modules/.bin/_mocha --no-timeouts"
  },
  "version": "0.10.0"
}
